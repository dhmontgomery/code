cook$UID <- paste(cook$STATE, cook$COUNTY, sep="-")
cook1 <- data.frame("UID" = unique(cook$UID))
head(cook1)
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
cook2 <- merge(cook1, cook2, by.x= "UID", by.y = "UID")
cook2 <- merge(cook1, cook, by.x= "UID", by.y = "UID")
head(cook2)
a <- match("1-1", cook)
head(a)
a
class(cook$UID)
cook[1:5,1:5]
cook[1:5,1:10]
ncol(cook)
cook[1:5,c(1:8,81)]
library(dplyr)
install.packages("dplyr")
library(dplyr)
?subset
a <- subset(cook, UID == "1-1" & YEAR == 1 & AGEGRP == 0)
ncol(a)
a[,1:5]
length(unique(cook$AGEGRP))
head(cook1)
cook1[1,1]
cook1[1,2]
cook1[1,2] = 2
head(cook1)
cook1 <- cook1[,1]
head(cook1)
cook1 <- data.frame("UID" = unique(cook$UID))
head(cook1)
?match
"1-1" %in cook
match("Jefferson County",cook)
head(colnames(cook))
colnames(cook)[6:15]
?subset
colnames(cook[1:10])
colnames(cook)[1:10]
unique(cook$YEAR)
j <- 1
k <- 0
k
a <- subset(cook, YEAR == j & AGEGRP == k, SELECT = 8)
i
i <- "1-1"
a <- subset(cook, UID == i & YEAR == j & AGEGRP == k, SELECT = 8)
a[1,1:10]
a <- subset(cook, UID == i & YEAR == j & AGEGRP == k, SELECT = TOT_POP)
a[1,1:10]
a <- subset(cook, UID == i & YEAR == j & AGEGRP == k, select = TOT_POP)
a
a <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,8]
a
ncol(cook)
head(cook)[,79-81]
head(cook)[,79:81]
head(cook)[,80]
head(cook)[,c(1:5,80)]
cook[1,1]
cook[1,2]
cook[1,2-1]
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
l
l-6
cook1[i,l-6]
cook1[i,l-7]
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
class(l-6)
cook2[,2:7] <- ""
cook2 <- cook1
head(cook2)
cook2[,2:7] <- ""
head(cook2)
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
cook2[,2:7] <- 0
head(cook2)
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook2[i,l] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
debug(for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
})
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
integer(0)
integer(1)
integer(2)
i
j
k
l
head(cook1)
cook1[1,1]
cook1[1,2]
cook1[1,2] <- subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
subset(cook, UID == i & YEAR == j & AGEGRP == k)[,l]
head(cook1)
for (i in 1:nrow(cook1)) { ## county IDs
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
cook1[i,l-6] <- subset(cook, UID == cook1[i,1] & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
head(cook1)
for (j in 1:8) { ## years
for (k in 1:19) { ## age groups
for (l in 8:80) { ## column names
for (i in 1:nrow(cook1)) { ## county IDs
cook1[i,l-6] <- subset(cook, UID == cook1[i,1] & YEAR == j & AGEGRP == k)[,l]
}
}
}
}
head(cook1)
8*19
setwd("/Users/david/Github/code/st-anthony-police/data")
library(xlsx)
library(plyr)
library(utils)
temp <- list.files(pattern = "*.xls") # Store a list of the file names.
titles <- list() # Create an empty list which we will shortly fill.
for (i in 1:length(temp)) {
titles[i] <- read.xlsx(temp[i], sheetIndex= 1, rowIndex = c(1:1), header= FALSE)
}
titles <- as.character(unlist(titles)) # Convert the list into a character vector.
titles <- unlist(strsplit(titles, split = " Demographics"))[c(1:7,9,11:13,15:21)]
for (i in 1:length(temp)) {
assign(titles[i],read.xlsx(temp[i], sheetIndex= 1, startRow = 2))
}
stats2011 <- rbind(`2011 Arrest`,`2011 Citation`,`2011 Warning`)
stats2012 <- rbind(`2012 Arrest`,`2012 Citation`,`2012 Warning`)
stats2013 <- rbind(`2013 Arrest`,`2013 Citation`,`2013 Warning`)
stats2014 <- rbind(`2014 Arrest`,`2014 Citation`,`2014 Warning`)
stats2015 <- rbind(`2015 Arrest`,`2015 Citation`,`2015 Warning`)
stats2016 <- rbind(`2016 Arrest`,`2016 Citation`,`2016 Warning`)
# Clean up the workspace by removing our old data frames.
rm(`2011 Arrest`,`2011 Citation`,`2011 Warning`,`2012 Arrest`,`2012 Citation`,`2012 Warning`,`2013 Arrest`,`2013 Citation`,`2013 Warning`,`2014 Arrest`,`2014 Citation`,`2014 Warning`,`2015 Arrest`,`2015 Citation`,`2015 Warning`,`2016 Arrest`,`2016 Citation`,`2016 Warning`)
allstats <- rbind(stats2011, stats2012, stats2013, stats2014, stats2015, stats2016)
# Could have just made a single rbind call to combine all the individual data frames, but this way you have the year data frames on hand if you want to look at just a particular year.
allstats$year <- as.numeric(format(allstats$Reported.Date, "%Y")) # Add a 'year' column.
View(allstats)
allstats$Race <- as.character(allstats$Race) #The data is coded as factors, so we have to convert it to character first.
allstats$Sex <- as.character(allstats$Sex)
allstats[is.na(allstats)] <- "Not available" #Replace every entry that's NA with "Not available"
?write.csv
write.csv(allstats,"st-anthony-stats.csv")
setwd("..")
getwd()
setwd("data")
getwd()
allstats <- read.csv("st-anthony-stats.csv")
sums_race <- count(allstats, c("Race","Involvement.Type","year"))
attach(sums_race)
sums <- aggregate(freq, list(year,Involvement.Type), FUN=sum)
colnames(sums) <- c("year","outcome","count")
detach(sums_race)
View(sums_race)
for (i in 1:nrow(sums_race)) {
sums_race$share_of_action[i] <- sums_race[i,4] / subset(sums, year == sums_race[i,3] & outcome == sums_race[i,2])[,3]
}
attach(sums_race)
sums_year <- aggregate(freq, list(year,Race), FUN=sum)
colnames(sums_year) <- c("year", "Race", "count")
detach(sums_race)
View(sums_year)
for (i in 1:nrow(sums_race)) {
sums_race$disposition_by_race[i] <- sums_race[i,4] / subset(sums_year, year == sums_race[i,3] & Race == sums_race[i,1])[,3]
}
arrests <- subset(sums_race, Involvement.Type == "Arrested")
cited <- subset(sums_race, Involvement.Type == "Cited")
warning <- subset(sums_race, Involvement.Type == "Warned")
sums_race_wb <- subset(sums_race, Race %in% c("White","Black"))
attach(sums_race)
crime_race <- aggregate(freq, list(Race, Involvement.Type), FUN=sum) #Create a data frame summarizing all interactions over the six-year period by race and outcome.
crime_race_sum <- aggregate(freq, list(Involvement.Type), FUN=sum) # Create a data frame with the total number of each outcome.
colnames(crime_race) <- c("Race","Result","freq") #Name the columns.
colnames(crime_race_sum) <- c("Result","freq") #Name the columns.
detach(sums_race)
crime_race_wb <- subset(crime_race, Race %in% c("White","Black")) # Discard races other than white and black.
crime_race_wb$rate <- c(4356/11474,6088/11474,1695/13863,7841/13863,205/1039,686/1039) # Divide the sums for each race-outcome combo by the total number of each outcome, here rendered manually.
# Convert this data into a matrix for barplotting purposes.
# Extract white and black data.
crime_race_w <- crime_race_wb[crime_race_wb$Race == "White",]
crime_race_b <- crime_race_wb[crime_race_wb$Race == "Black",]
# Create a new matrix recombining the two races.
crime_race_new <- cbind(crime_race_w[,4],crime_race_b[,4])
crime_race_new <- crime_race_new[-2,] # Drop citations, which have a high missing data rate.
colnames(crime_race_new) <- c("White","Black")
rownames(crime_race_new) <- c("Arrested","Warned")
png("stanthony-stops1.png",width=1500,height=1500, res=200)
par(mar = c(7,4,4,2))
stops1 <- barplot(t(crime_race_new), beside=T, ylim=c(0,.89), col=c("orange","blue"), ylab="Percent of outcome by race",xlab="Types of outcomes", border=NA, legend.text=TRUE, args.legend= c(x="right",title="Race", bty="n"), cex.main= 1.5, axes=FALSE, main = "St. Anthony Police Department arrests & warnings")
axis(2, at=(c(0,.2,.4,.6,.8)), labels=c("0%","20%","40%","60%","80%"), las=1)
text(stops1, t(crime_race_new)+.03,paste0(round(t(crime_race_new)*100,1),"%"))
# Add lines for the population share of whites and blacks in the three-city region served by the St. Anthony Police Department, derived from the U.S. Census.
abline(h=.07, lty=3)
abline(h=.76, lty=3)
text(3.5,.07,"Black population share", pos=3, cex=0.6)
text(3.5,.76,"White population share", pos=3, cex=0.6)
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.85, line=-1, font=3) # Credit line.
mtext("by race and outcome, 2011-2016",side=3, cex=1, line=.3) # Subtitle
mtext("Note: Warning data only for traffic violations. Arrests include all departmental arrests.\nCitations not included due to high rate of missing race data.\nPopulation share from U.S. Census for three-city region covered by department.", side=1,line=5.8, font =3, cex=.8) #Notes
dev.off()
crime_race_wb2 <- crime_race_wb # Create a copy of crime_race_wb
attach(crime_race_wb2)
tmp <- aggregate(freq, list(Race), FUN=sum)
crime_race_wb2$rate <- c(4365/6265,6088/14615,1695/6265,7841/14615,205/6265,686/14615)
write.csv(crime_race_wb2,"sum_sums_race.csv")
detach(crime_race_wb2)
arrests_wb <- subset(arrests, Race %in% c("White","Black"))
cited_wb <-subset(cited, Race %in% c("White","Black"))
warning_wb <- subset(warning, Race %in% c("White","Black"))
sums_race_w <- crime_race_wb2[crime_race_wb2$Race == "White",]
sums_race_b <- crime_race_wb2[crime_race_wb2$Race == "Black",]
sums_race_wb_new <- cbind(sums_race_w[,4], sums_race_b[,4])
colnames(sums_race_wb_new) <- c("White","Black")
rownames(sums_race_wb_new) <- c("Arrested","Cited","Warned")
# sums_race_wb_new <- sums_race_wb_new[-2,]
png("stanthony-stops.png", width=2000, height=1500, res=200)
par(mar=c(7,4,8,2))
stops <- barplot(t(sums_race_wb_new), beside=T, ylim=c(0,.75), col=c("blue","orange"), ylab="Percent of stops", xlab="Outcome of stop", legend.text=TRUE, args.legend = c(title = "Race", bty="n"), border=NA, main="St. Anthony Police Department encounters by outcome & race")
text(stops, t(sums_race_wb_new)+.03,paste0(round(t(sums_race_wb_new)*100,1),"%"))
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.7, line=.85)
mtext("Source: St. Anthony Police Department", side=3,line=1.8, font =3)
mtext("Note: in 23 percent of citations, race was not recorded.\n", side=1,line=4, font =3, cex=.8)
dev.off()
png("stanthony-stops.png", width=2000, height=1500, res=200)
par(mar=c(7,4,8,2))
stops <- barplot(t(sums_race_wb_new), beside=T, ylim=c(0,.75), col=c("blue","orange"), ylab="Percent of stops", xlab="Outcome of stop", legend.text=TRUE, args.legend = c(title = "Race", bty="n"), border=NA, main="St. Anthony Police Department encounters by outcome & race")
text(stops, t(sums_race_wb_new)+.03,paste0(round(t(sums_race_wb_new)*100,1),"%"))
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.7, line=.85)
mtext("Source: St. Anthony Police Department", side=3,line=1.8, font =3)
mtext("Note: in 23 percent of citations, race was not recorded.\n", side=1,line=5, font =3, cex=.8)
dev.off()
png("stanthony-stops.png", width=2000, height=1500, res=200)
par(mar=c(7,4,8,2))
stops <- barplot(t(sums_race_wb_new), beside=T, ylim=c(0,.75), col=c("blue","orange"), ylab="Percent of stops", xlab="Outcome of stop", legend.text=TRUE, args.legend = c(title = "Race", bty="n"), border=NA, main="St. Anthony Police Department encounters by outcome & race", axes= FALSE)
axis(2, at=c(0,.1,.2,.3,.4,.5,.6,.7), labels=c("0%","10%","20%","30%","40%","50%","60%","70%"), las=1)
text(stops, t(sums_race_wb_new)+.03,paste0(round(t(sums_race_wb_new)*100,1),"%"))
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.7, line=.85)
mtext("Source: St. Anthony Police Department", side=3,line=1.8, font =3)
mtext("Note: in 23 percent of citations, race was not recorded.\n", side=1,line=5, font =3, cex=.8)
dev.off()
library(tidyr)
a <- group_by(sums_race, year)
library(dplyr)
a <- group_by(sums_race, year)
View(a)
rm(a)
install.packages(tidyr)
install.packages("tidyr")
library(tidyr)
a <- spread(sums_race,year)
?spread
a <- spread(sums_race,year,freq)
View(a)
a <- spread(sums_race,year,freq, drop=FALSE)
a <- spread(sums_race,year,freq)
b <- group_by(a, Race)
View(b)
rm(b)
?summarize
?group_by
?tidyr
a <- spread(sums_race,year,freq, drop = FALSE)
View(a)
a <- spread(sums_race,year,freq)
View(a)
a <- spread(sums_race[,1:4],year,freq)
getwd()
setwd("/Users/david/Github/code/st-anthony-police")
write.csv(spread(sums_race[,1:4],year,freq), "summary-stats1.csv")
write.csv(spread(sums_race[,1:4],year,freq), "summary-stats1.csv")
write.csv(spread(sums_race[,1:4],year,freq), "summary-stats.csv")
write.csv(spread(sums_race, "summary-stats.csv")
write.csv(spread(sums_race[,1:4],year,freq), "summary-stats-readable.csv")
write.csv(sums_race, "summary-stats.csv")
write.csv(spread(sums_race[,1:4],year,freq), "summary-stats-readable.csv")
# An R script that will import data on police activity by the St. Anthony, Minnesota, police department, previously produced by the `st-anthony-police.R` script. It will then analyze that data on the basis of race and produce a graph of the racial disparities.
# Written by David H. Montgomery for the Pioneer Press.
# This script assumes your working directory is the folder containing the "st-anthony-stats.csv" file. If you just ran `st-anthony-police.R` your working directory should already be that folder.
library(plyr)
library(utils)
# Load the data
allstats <- read.csv("st-anthony-stats.csv")
sums_race <- read.csv("summary-stats.csv")
# Create subsets with just the summary data for each type of offense.
arrests <- subset(sums_race, Involvement.Type == "Arrested")
cited <- subset(sums_race, Involvement.Type == "Cited")
warning <- subset(sums_race, Involvement.Type == "Warned")
# Create a subset with just white and black races.
sums_race_wb <- subset(sums_race, Race %in% c("White","Black"))
# Graph showing interactions by result
# Prepare the data.
attach(sums_race)
crime_race <- aggregate(freq, list(Race, Involvement.Type), FUN=sum) #Create a data frame summarizing all interactions over the six-year period by race and outcome.
crime_race_sum <- aggregate(freq, list(Involvement.Type), FUN=sum) # Create a data frame with the total number of each outcome.
colnames(crime_race) <- c("Race","Result","freq") #Name the columns.
colnames(crime_race_sum) <- c("Result","freq") #Name the columns.
detach(sums_race)
crime_race_wb <- subset(crime_race, Race %in% c("White","Black")) # Discard races other than white and black.
crime_race_wb$rate <- c(4356/11474,6088/11474,1695/13863,7841/13863,205/1039,686/1039) # Divide the sums for each race-outcome combo by the total number of each outcome, here rendered manually.
# Convert this data into a matrix for barplotting purposes.
# Extract white and black data.
crime_race_w <- crime_race_wb[crime_race_wb$Race == "White",]
crime_race_b <- crime_race_wb[crime_race_wb$Race == "Black",]
# Create a new matrix recombining the two races.
crime_race_new <- cbind(crime_race_w[,4],crime_race_b[,4])
crime_race_new <- crime_race_new[-2,] # Drop citations, which have a high missing data rate.
colnames(crime_race_new) <- c("White","Black")
rownames(crime_race_new) <- c("Arrested","Warned")
# Plot the percentage of all arrests and warnings given to whites and blacks.
# Will write to a PNG file in the working directory.
png("stanthony-stops1.png",width=1500,height=1500, res=200)
par(mar = c(7,4,4,2))
stops1 <- barplot(t(crime_race_new), beside=T, ylim=c(0,.89), col=c("orange","blue"), ylab="Percent of outcome by race",xlab="Types of outcomes", border=NA, legend.text=TRUE, args.legend= c(x="right",title="Race", bty="n"), cex.main= 1.5, axes=FALSE, main = "St. Anthony Police Department arrests & warnings")
axis(2, at=(c(0,.2,.4,.6,.8)), labels=c("0%","20%","40%","60%","80%"), las=1)
text(stops1, t(crime_race_new)+.03,paste0(round(t(crime_race_new)*100,1),"%"))
# Add lines for the population share of whites and blacks in the three-city region served by the St. Anthony Police Department, derived from the U.S. Census.
abline(h=.07, lty=3)
abline(h=.76, lty=3)
text(3.5,.07,"Black population share", pos=3, cex=0.6)
text(3.5,.76,"White population share", pos=3, cex=0.6)
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.85, line=-1, font=3) # Credit line.
mtext("by race and outcome, 2011-2016",side=3, cex=1, line=.3) # Subtitle
mtext("Note: Warning data only for traffic violations. Arrests include all departmental arrests.\nCitations not included due to high rate of missing race data.\nPopulation share from U.S. Census for three-city region covered by department.", side=1,line=5.8, font =3, cex=.8) #Notes
dev.off()
png("stanthony-stops.png",width=1500,height=1500, res=200)
par(mar = c(7,4,4,2))
stops1 <- barplot(t(crime_race_new), beside=T, ylim=c(0,.89), col=c("orange","blue"), ylab="Percent of outcome by race",xlab="Types of outcomes", border=NA, legend.text=TRUE, args.legend= c(x="right",title="Race", bty="n"), cex.main= 1.5, axes=FALSE, main = "St. Anthony Police Department arrests & warnings")
axis(2, at=(c(0,.2,.4,.6,.8)), labels=c("0%","20%","40%","60%","80%"), las=1)
text(stops1, t(crime_race_new)+.03,paste0(round(t(crime_race_new)*100,1),"%"))
# Add lines for the population share of whites and blacks in the three-city region served by the St. Anthony Police Department, derived from the U.S. Census.
abline(h=.07, lty=3)
abline(h=.76, lty=3)
text(3.5,.07,"Black population share", pos=3, cex=0.6)
text(3.5,.76,"White population share", pos=3, cex=0.6)
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.85, line=-1, font=3) # Credit line.
mtext("by race and outcome, 2011-2016",side=3, cex=1, line=.3) # Subtitle
mtext("Note: Warning data only for traffic violations. Arrests include all departmental arrests.\nCitations not included due to high rate of missing race data.\nPopulation share from U.S. Census for three-city region covered by department.", side=1,line=5.8, font =3, cex=.8) #Notes
dev.off()
png("stanthony-stops.png",width=1500,height=1500, res=200)
par(mar = c(7,4,4,2))
stops1 <- barplot(
t(crime_race_new),
beside=T,
ylim=c(0,.89),
col=c("orange","blue"),
ylab="White and black share of outcome",
xlab="Types of outcomes",
border=NA,
legend.text=TRUE,
args.legend= c(x="right",title="Race", bty="n"),
cex.main= 1.5,
axes=FALSE,
main = "St. Anthony Police Department arrests & warnings")
axis(
2,
at=(c(0,.2,.4,.6,.8)),
labels=c("0%","20%","40%","60%","80%"),
las=1)
text(stops1, t(crime_race_new)+.03,paste0(round(t(crime_race_new)*100,1),"%"))
# Add lines for the population share of whites and blacks in the three-city region served by the St. Anthony Police Department, derived from the U.S. Census.
abline(h=.07, lty=3)
abline(h=.76, lty=3)
text(3.5,.07,"Black population share", pos=3, cex=0.6)
text(3.5,.76,"White population share", pos=3, cex=0.6)
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.85, line=-1, font=3) # Credit line.
mtext(", 2011-2016",side=3, cex=1, line=.3) # Subtitle
mtext("Note: Warning data only for traffic violations. Arrests include all departmental arrests.\nCitations not included due to high rate of missing race data.\nPopulation share from U.S. Census for three-city region covered by department.", side=1,line=5.8, font =3, cex=.8) #Notes
dev.off()
png("stanthony-stops.png",width=1500,height=1500, res=200)
par(mar = c(7,4,4,2))
stops1 <- barplot(
t(crime_race_new),
beside=T,
ylim=c(0,.89),
col=c("orange","blue"),
ylab="White and black share of outcome",
xlab="Types of outcomes",
border=NA,
legend.text=TRUE,
args.legend= c(x="right",title="Race", bty="n"),
cex.main= 1.5,
axes=FALSE,
main = "St. Anthony Police Department arrests & warnings")
axis(
2,
at=(c(0,.2,.4,.6,.8)),
labels=c("0%","20%","40%","60%","80%"),
las=1)
text(stops1, t(crime_race_new)+.03,paste0(round(t(crime_race_new)*100,1),"%"))
# Add lines for the population share of whites and blacks in the three-city region served by the St. Anthony Police Department, derived from the U.S. Census.
abline(h=.07, lty=3)
abline(h=.76, lty=3)
text(3.5,.07,"Black population share", pos=3, cex=0.6)
text(3.5,.76,"White population share", pos=3, cex=0.6)
mtext("Pioneer Press graphic by David H. Montgomery",side=3, cex=.85, line=-1, font=3) # Credit line.
mtext("percent of given to whites and blacks, 2011-2016",side=3, cex=1, line=.3) # Subtitle
mtext("Note: Warning data only for traffic violations. Arrests include all departmental arrests.\nCitations not included due to high rate of missing race data.\nPopulation share from U.S. Census for three-city region covered by department.", side=1,line=5.8, font =3, cex=.8) #Notes
dev.off()
list.files()
?list.files
?list.files(all.files=TRUE)
list.files(all.files=TRUE)
unlink(".RData")
list.files(all.files=TRUE)
unlink(".Rhistory")
list.files(all.files=TRUE)
if(!file.exists("summary-stats.csv")) {
write.csv(sums_race, "summary-stats.csv")
}
if(!file.exists("summary-stats.csv")) {
write.csv(sums_race, "summary-stats.csv")
}
if(!file.exists("data")) {
unzip("stanthony.zip", exdir = "data") # Extract the ZIP into a Data folder.
}
if(!file.exists("data")) {
unzip("stanthony.zip", exdir = "data") # Extract the ZIP into a Data folder.
}
